name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'

      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./mvnw

      - name: Build with Maven (skip tests)
        run: ./mvnw clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kiii-project:latest
          load: false
          no-cache: false
          pull: false
  
  ci-compose:
    runs-on: ubuntu-latest
    needs: [build-and-push-backend]

    services:
      db:
        image: postgres:latest
        ports:
          - "5433:5432"
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_DB: movies
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 24212002

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build with Maven (skip tests)
        run: mvn -f ./pom.xml clean package -DskipTests

      - name: Set up Docker Compose
        run: docker-compose -f docker-compose.yml up -d
